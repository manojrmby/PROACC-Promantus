@{
    var PM_Count = ViewBag.PMCount;
}

<input type="hidden" id="txtTimeStamp" />
<div class="form-row py-1">
    <div class="col-lg-7">
        <div class="d-flex">
            <div class="search-field px-2 w-40">
                <div class="ibox">
                    <!-- <div class="ibox-body"> -->
                    <form class="navbar-search" action="javascript:;">
                        <div class="rel">
                            <span class="search-icon"><i class="fa fa-search"></i></span>
                            <input class="form-control" placeholder="Search PM" id="searchPm">
                        </div>
                    </form>
                    <!-- </div> -->
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-5">
        <div class="col-lg-5">
            
        </div>
        <div class="new-project-submit d-flex justify-content-end">
            <div class="sec-left-resource d-flex justify-content-end">
                <div class="ibox current-projects mb-0"><span>Current Count:&nbsp;&nbsp;<strong class="badge badge-info  h-100">@PM_Count</strong></span></div>
            </div>
            <button type="button" class="btn btn-primary order-1 ml-2 pointer" id="btnAddPM">Add New PM Task</button>
        </div>
    </div>
</div>
<div class="d-flex pro-list-table">
    <table class="fixed table table-borderless bg-mediumgray mb-0 accordion Projectbody" id="accordion2">
        <thead>
            <tr>
                <td scope="col" width=25%>Category</td>
                <td scope="col" width=20%>
                    EST HOURS
                    @*<small>&nbsp;&nbsp;&nbsp;<i class="fa fa-plus" aria-hidden="true"></i></small>*@
                </td>
                <td scope="col" width=20%>Task Name</td>
                <td scope="col" width=10%>Action</td>
                @*<td width=5% style="visibility: hidden;"><span>eXP</span></td>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.PmDetail)
            {
                <tr id="@item.PMTaskId" class="tr_Effect">

                    <td><span class="text-capitalize" data-toggle="tooltip" title="@item.PMTaskCategory">@item.PMTaskCategory</span></td>
                    <td><span class="text-capitalize" data-toggle="tooltip" title="@item.EST_Hours">@item.EST_Hours</span></td>
                    <td><span class="text-capitalize" data-toggle="tooltip" title="@item.PMTaskName">@item.PMTaskName</span></td>
                    @*<td>
                        <span class="card-title">
                                <i class="fa fa-ellipsis-h ellipsis-read" aria-hidden="true">
                                    </i>
                            </span>
                            </td>*@
                    <td>
                        <span class="text-capitalize">
                            <i class="fa fa-pencil getPMID" aria-hidden="true" id="EditRole" style="cursor:pointer" data-toggle="modal"></i>
                            &nbsp;&nbsp;&nbsp;<i class="fa fa-trash delPmTask" id="" style="cursor:pointer" aria-hidden="true"></i><input type="hidden" value="@item.PMTaskId" />
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div id="addPM" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-center w-100 semibold">Add New PM Task</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btnPClose">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row bg-white">
                    <div class="ibox w-100">
                        <div class="ibox-body">
                            <form>
                                <div class="form-group">
                                    <label for="">Task Category<span id="Tstar" style="color:red">*</span></label>
                                    <select class="form-control" id="txtTaskcategory" name="TaskCategory" style="width:100%">
                                        <option value="0">---Select Task Category---</option>
                                    </select>
                                    <span id="lbltaskCategory" style="color:red"></span>
                                </div>
                                @*<div>
                                    <label for="">Activities<span id="asterisk1" style="color:red">*</span></label>
                                    <select class="form-control drpTextHeight" id="Category" name="Category" style="width:100%">
                                        <option value="0">--Select Activities---</option>
                                        <option value="0">Discover</option>
                                        <option value="0">Prepare</option>
                                    </select>
                                </div>*@
                                <div class="form-group">
                                    <label for="">Est Hours HH:MM<span id="Estar" style="color:red">*</span></label>
                                    <input type="text" class="form-control" id="txtEstdHours" name="ESTDHours" placeholder="00:00" />
                                    <span id="lblEstdHours" style="color:red"></span>
                                </div>
                                <div class="form-group">
                                    <label for="">Task Name<span id="Nstar" style="color:red">*</span></label>
                                    <textarea class="form-control" id="txtTaskName" name="TaskName" rows="4" cols="50"></textarea>
                                    <span id="lbltaskName" style="color:red"></span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="submit d-flex justify-content-center w-100">
                    <button type="button" class="btn btn-primary order-1 ml-2 pointer" id="btnPMCreate">Save</button>
                    <button type="button" class="btn btn-secondary pointer" id="cancelPModal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="UpdatePm" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <input type="hidden" id="PMid" />
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-center w-100 semibold">Update PM Task</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btnPmclose">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row bg-white">
                    <div class="ibox w-100">
                        <div class="ibox-body">
                            <form>
                                <div class="form-group">
                                    <label for="">Task Category<span id="Tcatstar" style="color:red">*</span></label>
                                    <select class="form-control" id="txtUpdtTaskcategory" name="UpdtTaskCategory" style="width:100%">
                                        <option value="0">---Select Task Category---</option>
                                        @foreach (var item in ViewBag.TaskList)
                                        {

                                            <option value="@item.PMTaskCategoryID" selected>@item.PMtTaskCatName</option>
                                        }
                                    </select>
                                    <span id="lblUpdtaskCategory" style="color:red"></span>
                                </div>
                                <div class="form-group">
                                    <label for="">Est Hours HH:MM<span id="Estdstar" style="color:red">*</span></label>
                                    <input type="text" class="form-control" id="txtUpdtEstdHours" name="UpdtESTDHours" placeholder="00:00" />
                                    <span id="lblUpdtEstdHours" style="color:red"></span>
                                </div>
                                <div class="form-group">
                                    <label for="">Task Name<span id="Tnstar" style="color:red">*</span></label>
                                    <input type="text" class="form-control" id="txtUpdtTaskName" name="UpdtTaskName" />
                                    <span id="lblUpdttaskName" style="color:red"></span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="submit d-flex justify-content-center w-100">
                    <button type="button" class="btn btn-primary order-1 ml-2 pointer" id="btnPmUpdate">Update</button>
                    <button type="button" class="btn btn-secondary pointer" id="cancelPMModal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>


<div id="deletePM" class="modal fade">
    <input type="hidden" id="delPm" />
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-body">
                <p>Do you really want to delete &nbsp; <b><span id="hiddenPm" style="color:black"></span></b></p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-outline-danger" id="DeletePmTask">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>
    $("#searchPm").on("keyup", function () {
        var value = $(this).val().toLowerCase();
        $("#accordion2 tbody tr ").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
    });

    $("#Tstar").show();
    $("#Estar").show();
    $("#Nstar").show();
    $("#Tcatstar").show();
    $("#Estdstar").show();
    $("#Tnstar").show();

    function CheckPmaAvailability(TaskName) {
        var _CheckTask = TaskName;
        var _status = true;
        $.ajax({
            type: 'Get',
            url: '@Url.Action("CheckTaskAvailabilty", "Admin")',
            data: {
                TaskName: _CheckTask
            },
            dataType: "json",
            async: false,
            success: function (response) {
                if (response == false) {
                    _status = false;
                }
            },
            error: function () {
            },
        });
        return _status;
    }

    $(document).ready(function () {
        $("#txtTaskcategory").select2();

        function ResetPm() {
             $('#addPM').modal('hide')
            $('.modal-backdrop').remove();

            $("#txtTaskcategory").val(0)
            $("#txtTaskName").val('')
            $("#txtEstdHours").val('')

            $("#lbltaskCategory").html("").show();
            $("#lblEstdHours").html("").show();
            $("#lbltaskName").html("").show();

            $("#Tstar").show();
            $("#Estar").show();
            $("#Nstar").hide();


        }

        $("#txtTaskName").keypress(function (event) {
            if (event.which === 44) {
                event.preventDefault();
                $("#lblTaskName").html("Not Allowed").show();
            }
        });

        function TaskEstHrs(Estimated) {
            
            var Status = true
            //var Estimated = $("#txtEstdHours").val();
            var filter = /^([0-9]{1,2}).[0-5][0-9]$/
            var filter1 = /^(00.[0-5][1-9]|0.[0-5][1-9]|00.[1-5][0-9]|0.[1-5][0-9]|0[1-9]+[.][0-5][0-9]|[1-9]+[.][0-5][0-9]|[1-9][0-9]+[.][0-5][0-9])$/
            if (!filter.test(Estimated)) {
                Status = false;
            }
            else if (!filter1.test(Estimated)) {
                Status = false;
            }
            return Status;
        }

        $('#txtEstdHours').on('keypress', function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 58)) {
                event.preventDefault();
                $("#lblEstdHours").html("Time Only").show().fadeOut(5000);
            }

        });

        $('#txtEstdHours').keyup(function (event) {
            this.value = this.value
                .replace(/[^\d:]/g, '')             // numbers and decimals only
                .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at the beginning
                .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
                //.replace(/(\:[\d]{2})./g, '$1');    // not more than 4 digits after decimal
                .replace(/(\:[0-5][0-9]{1})./g, '$1');

        });


        $('.getPMID').click(function () {
            var id = $(this).closest('tr').attr('id');
            $.ajax({
                type: "GET",
                url: '@Url.Action("__UpdatePM", "Admin")',
                data: { 'id': id },
                success: function (data) {

                    $("#txtUpdtTaskcategory").val(data.PMTaskCategoryID);
                    $("#txtUpdtEstdHours").val(data.EST_Hours);
                    $("#txtUpdtTaskName").val(data.PMTaskName);
                    $("#PMid").val(data.PMTaskId);
                    $("#txtUpdtTaskcategory").select2(data, { id: data.PMTaskCategoryID});
                    $('#UpdatePm').modal('show');
                     $("#txtTimeStamp").val(data.TS);
                },
                error: function (a) {
                    alert('Data Not Found');
                }
            });
        });


        $("#btnAddPM").click(function () {
            $('#addPM').modal('show');
             $.ajax({
            type: 'GET',
            url: '@Url.Action("GetPMList", "Admin")',
                 success: function (data) {
                     var state = $("#txtTaskcategory");
                     state.empty();
                     state.append($('<option/>', {
                         value: 0,
                         text: '--Select PM--'
                     }));
                     $.each(data, function (index, item) {
                         state.append($('<option/>', {
                             value: item.PMTaskCategoryID,
                             text: item.PMTaskCategory
                         }));
                     });
                 }
             });
        });


        $("#btnPClose,#cancelPModal").click(function () {
            ResetPm();
            RefreshPmTask();
        });

        $("#btnPmclose,#cancelPMModal").click(function () {
            ResetUpdatePm();
            RefreshPmTask();
        });


        $("#btnPMCreate").on("click", function () {
            var EstdHours = $("input[name='ESTDHours']").val();
            EstdHours = EstdHours.replace(":", ".");
            var TaskName = $("textarea[name='TaskName']").val();
            var TaskCategory = $("select[name='TaskCategory'] option:selected").val().trim();

            var _EstdHours = _TaskName = _TaskCategory = false;
            if (TaskCategory == 0) {
                _TaskCategory = true;
                $("#Tstar").show();
                $("#lbltaskCategory").html("Please select the Task Category").show();
            }
            else {
                $("#Tstar").hide();
                $("#lbltaskCategory").html("").show();

            }
            if (TaskName == "") {
                _TaskName = true;
                $("#Nstar").show();
                $("#lbltaskName").html("Please enter the Task Name").show();
            }
            else {
                $("#Nstar").show();
                $("#lbltaskName").html("").show();

            }
            if (EstdHours == "") {
                _EstdHours = true;
                $("#Estar").show();
                $("#lblEstdHours").html("Please enter the Est Hours").show();
            }
            else if (TaskEstHrs(EstdHours) == false) {
                _EstdHours = true;
                $("#Estar").show();
                $("#lblEstdHours").html("Please enter a valid Est Hours").show();
            }
            else {
                $("#Estar").hide();
                $("#lblEstdHours").html("").show();
            }
            //if (TaskEstHrs() == false) {
            //    if (EstdHours == "") {
            //        _EstdHours = true;
            //        $("#Estar").show();
            //        $("#lblEstdHours").html("Please enter the Est Hour").show();
            //    }
            //    else {
            //        $("#Estar").hide();
            //        $("#lblEstdHours").html("").show();
            //    }
            //}
            //else {
            //    if (EstdHours == "") {
            //        $("#Estar").show();
            //        $("#lblEstdHours").html("Please enter the Est Hour").show();
            //    }
            //    else {
            //        $("#Estar").hide();
            //        $("#lblEstdHours").html("").show();
            //    }
            //}
            if (CheckPmaAvailability(TaskName) == false) {
                $("#Nstar").show();
                $("#lbltaskName").html("Task Name Already exists").show();
            }
            else {
                if (TaskName == "") {
                    $("#Nstar").show();
                    $("#lbltaskName").html("Please enter the Task Name").show();
                }
                else {
                    $("#Nstar").hide();
                    $("#lbltaskName").html("").show();
                }
            }
            if (_EstdHours == false && _TaskName == false && _TaskCategory == false && CheckPmaAvailability(TaskName) == true) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("PmTaskCreation", "Admin")',
                    data: {
                        EstdHours: EstdHours,
                        TaskCategory: TaskCategory,
                        TaskName: TaskName
                    },
                    success: function (response) {
                        if (response == "success") {
                            Notiflix.Notify.Success('PM <Strong>Created </strong>successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                            ResetPm();
                            RefreshPmTask();
                        }
                        else {
                            $("#btnPMCreate").prop('disabled', true);
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        });
    });


    @*$(".delPmTask").click(function () {
        $("#deletePM").modal('show');
        var Pmid = $(this).next().val();
        var PmTask = $(this).closest("tr").find('td:eq(0)').text();
        $("#hiddenPm").text(PmTask);
        $("#delPm").val(Pmid);
    });

    $("#DeletePmTask").click(function () {
        var id = $("#delPm").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeletePm", "Admin")',
            data: { id: id },
            dataType: "json",
            success: function (response) {
                if (response == "success") {
                    RefreshPmTask();
                    $("#deletePM").modal('hide');
                    $(".modal-backdrop").remove();
                }
                else {

                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });*@

     $(".delPmTask").on("click", function () {
        var id = $(this).next().val();
         Notiflix.Confirm.Show(
                'Confirm',
                'Do you want to delete ?',
                'Yes', 'No',
                function () {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeletePm", "Admin")',
                        data: { id: id },
                        dataType: "json",
                        success: function (response) {
                            if (response == "success") {
                                $("#deletePM").modal('hide');
                                $(".modal-backdrop").remove();
                                RefreshPmTask();
                                Notiflix.Notify.Success('PM <Strong>deleted </strong>successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                            }
                            else {

                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }, function () {
                    //location.reload();
                    // No button callback
                    //alert('If you say so...');
                }
            )
     });
</script>
<script>
      function CheckPmUpdateAvailability(TaskName,Id) {
          var _CheckTask = TaskName;
          var _PmId = Id;
        var _status = true;
        $.ajax({
            type: 'Get',
            url: '@Url.Action("CheckTaskAvailabilty", "Admin")',
            data: {
                TaskName: _CheckTask,
                Pid:_PmId
            },
            dataType: "json",
            async: false,
            success: function (response) {
                if (response == false) {
                    _status = false;
                }
            },
            error: function () {
            },
        });
        return _status;
    }

    //$("#txtUpdtTaskcategory").select2(
    //);

    function ResetUpdatePm() {
         $('#UpdatePm').modal('hide');
        $('.modal-backdrop').remove();

        $("#txtUpdtTaskcategory").val(0);
        $("#txtUpdtTaskName").val('');
        $("#txtUpdtEstdHours").val('');
        $("#lblUpdtaskCategory").html("").show();
        $("#lblUpdtEstdHours").html("").show();
        $("#lblUpdttaskName").html("").show();


    }

    function TaskUpdtEstHrs(Estimated) {
        //var status = true
        //var txtEstimated = $("#txtUpdtEstdHours").val();
        //var filter = /^([0-9]{1,2}):[0-5][0-9]$/
        //if (!filter.test(txtEstimated)) {
        //    status = false;
        //}
        //return status;
        var Status = true;
        var filter = /^([0-9]{1,2}).[0-5][0-9]$/
        var filter1 = /^(00.[0-5][1-9]|0.[0-5][1-9]|00.[1-5][0-9]|0.[1-5][0-9]|0[1-9]+[.][0-5][0-9]|[1-9]+[.][0-5][0-9]|[1-9][0-9]+[.][0-5][0-9])$/
        if (!filter.test(Estimated)) {
            Status = false;
        }
        else if (!filter1.test(Estimated)) {
            Status = false;
        }
        return Status;
    }

    $('#txtUpdtEstdHours').on('keypress', function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 58)) {
            event.preventDefault();
            $("#lblUpdtEstdHours").html("Time Only").show().fadeOut(5000);
        }

    });

    $('#txtUpdtEstdHours').keyup(function (event) {
        this.value = this.value
            .replace(/[^\d:]/g, '')             // numbers and decimals only
            .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at the beginning
            .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
            //.replace(/(\:[\d]{2})./g, '$1');    // not more than 4 digits after decimal
            .replace(/(\:[0-5][0-9]{1})./g, '$1');

    });


    $("#btnPmUpdate").on("click", function () {
        var EstdHours = $("input[name='UpdtESTDHours']").val();
        EstdHours = EstdHours.replace(":", ".");
        var TaskName = $("input[name='UpdtTaskName']").val();
        var TaskCategory = $("select[name='UpdtTaskCategory'] option:selected").val().trim();
        var Id = $("#PMid").val();
        var ts = $("#txtTimeStamp").val();

        var _EstUpdtdHours = _TaskUpdtName = _TaskUpdtCategory = false;

        if (TaskCategory == 0) {
            _TaskUpdtCategory = true;
            $("#Tcatstar").show();
            $("#lblUpdtaskCategory").html("Please select the Task Category").show();
        }
        else {
            $("#Tcatstar").hide()
            $("#lblUpdtaskCategory").html("").show();
        }
        if (TaskName == "") {
            _TaskUpdtName = true;

            $("#Tnstar").show();
            $("#lblUpdttaskName").html("Please enter the Task Name").show();
        }
        else {
            $("#Tnstar").hide();
            $("#lblUpdttaskName").html("").show();

        }
        if (EstdHours == "") {
            _EstUpdtdHours = true;
            $("#Estdstar").show();
            $("#lblUpdtEstdHours").html("Please enter the Est Hours").show();
        }
        else if (TaskUpdtEstHrs(EstdHours) == false) {
             _EstUpdtdHours = true;
              $("#Estdstar").show();
            $("#lblUpdtEstdHours").html("Invalid Est hours").show();
        }
        else {
            $("#Estdstar").hide();

            $("#lblUpdtEstdHours").html(" ").show();
        }
        //if (TaskUpdtEstHrs() == false) {
        //    $("#Estdstar").show();
        //    $("#lblUpdtEstdHours").html("Invalid Est hour").show();
        //}
        //else {
        //    if (EstdHours == "") {
        //        $("#Estdstar").show();
        //        $("#lblUpdtEstdHours").html("Please enter the Est Hour").show();
        //    }
        //    else {
        //        $("#Estdstar").hide();
        //        $("#lblUpdtEstdHours").html("").show();
        //    }
        //}
        if (CheckPmUpdateAvailability(TaskName,Id) == false) {
            $("#Tnstar").show();
            $("#lblUpdttaskName").html("Task Name Already exists").show();
        }
        else {
            if (TaskName == "") {
                $("#Tnstar").show();
                $("#lblUpdttaskName").html("Please enter the Task Name").show();
            }
            else {
                $("#Tnstar").hide();
                $("#lblUpdttaskName").html("").show();

            }
        }
        if (_EstUpdtdHours == false && _TaskUpdtName == false && _TaskUpdtCategory == false && CheckPmUpdateAvailability(TaskName, Id) == true) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdatePmTaskCreation", "Admin")',
                data: {
                    EstdHours: EstdHours,
                    TaskCategory: TaskCategory,
                    TaskName: TaskName,
                    Id: Id,
                    TS:ts
                },
                success: function (response) {
                    if (response == "success") {
                        Notiflix.Notify.Success('PM <Strong>Updated </strong>successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                    }
                    else {
                        Notiflix.Notify.Failure('PM Not Saved..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                        //$("#btnPMCreate").prop('disabled', true);
                    }
                    RefreshPmTask();
                    ResetUpdatePm();
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });

</script>