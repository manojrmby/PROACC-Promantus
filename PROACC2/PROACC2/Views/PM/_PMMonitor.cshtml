
    <script src="~/assets/js/CustomSelect.js"></script>
<style>
    .calendar {
        position: absolute;
        right: 0px;
        padding: 10px 25px;
        /* top: 13%;
        left: 85%;
        font-size: 1.1em;
        cursor: pointer;*/
    }
    /*hasDatepicker i{

    }*/
    .datepicker {
        width: 220px;
        height: 210px;
    }
</style>

<div class="d-flex pro-list-table">
    <table class="table table-borderless mb-0 PMTaskMonitor" id="PMTaskMonitor">
        <thead>
            <tr>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="PM Task">PM Task</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Task Category">Task Category</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Est Hrs">Est Hrs</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Actual Hrs">Actual Hrs</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Planned Start Date">Planned Start Date</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Planned End Date">Planned End Date</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Actual Start Date">Actual Start Date</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Actual End Date">Actual End Date</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Status">Status</td>
                <td scope="col" data-placement="top" data-toggle="tooltip" title="Edit">Edit</td>
            </tr>
        </thead>
        <tbody class="bg-white">
            <tr class="colspan">
                <td colspan="10" style="text-align:center">
                    No Records Found
                </td>
            </tr>
        </tbody>
    </table>
</div>
@*<div class="form-row pro-list-table-pm">
        <div class="col-lg-12 pro-list-table resource-planning">
            <table class="fixed table table-borderless bg-mediumgray mb-0 PMTaskMonitor" id="PMTaskMonitor">
                <thead>
                    <tr>
                        <td scope="col">PM Task</td>
                        <td scope="col">Status</td>
                        <td scope="col">Est</td>
                        <td scope="col">Actual</td>
                        <td scope="col">Planned Start Date</td>
                        <td scope="col">Actual Start Date</td>
                        <td scope="col">Edit</td>
                    </tr>
                </thead>
                <tbody class="bg-white">
                    <tr class="colspan">
                        <td colspan="7" style="text-align:center">
                            No Records Found
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>*@

<div id="UpdatePMTask" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-center w-100 semibold">Update PM Task</h4>
                <button type="button" class="close btnPMTaskMonitorclose" data-dismiss="modal" aria-label="Close" id="">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row bg-white">
                    <div class="ibox w-100">
                        <div class="ibox-body">
                            <form>
                                <input type="text" class="form-control" id="txtPMTaskMonitorID" hidden />

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="">PM Task Name</label>
                                            <input type="text" class="form-control" id="txtPMTaskName" name="PMTaskName" value="" />
                                            <span id="lblPMTaskName" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">EST Hours HH:MM</label>
                                            <input class="form-control" id="txtEst" value="" />
                                            <span id="lblEstimated" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">Actual Hours HH:MM</label>
                                            <input class="form-control" id="txtAct" value="" />
                                            <span id="lblActual" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">Status</label>
                                            <select class="form-control" id="drpStatus" name="">
                                                <option value="0" id="drpStatusEdit">Select Status</option>
                                            </select>
                                            <span id="lblStatus" style="color:red"></span>
                                        </div>
                                    </div>
                                    <input hidden id="minDate" type="text"/>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="">Planned Start Date</label>
                                            <div class="form-group ">
                                                <span>
                                                    <i class="fa fa-calendar calendar Planned_PM_St_date"></i>
                                                    <input type="text" class="form-control p-2 _Date" id="Planned_PM_StartDate">
                                                </span>
                                            </div>
                                            <span id="lblPlannedStDate" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">Planned End Date</label>
                                            <div class="form-group ">
                                                <span>
                                                    <i class="fa fa-calendar calendar Planned_PM_En_date"></i>
                                                    <input type="text" class="form-control p-2 _Date" id="Planned_PM_EndDate">

                                                </span>
                                            </div>
                                            <span id="lblPlannedEnDate" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">Actual Start Date</label>
                                            <div class="form-group ">
                                                <span>
                                                    <i class="fa fa-calendar calendar Actual_PM_St_date"></i>
                                                    <input type="text" class="form-control p-2 _Date" id="Actual_PM_StartDate">

                                                </span>
                                            </div>
                                            <span id="lblActStDt" style="color:red"></span>
                                        </div>
                                        <div class="form-group">
                                            <label for="">Actual End Date</label>
                                            <div class="form-group ">
                                                <i class="fa fa-calendar calendar Actual_PM_En_date"></i>
                                                <span>
                                                    <input type="text" class="form-control p-2 _Date" id="Actual_PM_EndDate">
                                                </span>
                                            </div>
                                            <span id="lblActEnDt" style="color:red"></span>
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label for="">Comments</label>
                                    <input class="form-control" id="txtPMTaskComments" value="" />
                                    <span id="lblPMTaskComments" style="color:red"></span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="submit d-flex justify-content-center w-100">
                    <button type="button" class="btn btn-primary order-1 ml-2 pointer" id="btnPMTaskMonitorSave">Save</button>
                    <button type="button" class="btn btn-secondary pointer btnPMTaskMonitorclose" id="">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#UpdatePMTask').modal('hide');
        $("#PMFileUpload").html("");
        $(".ins").hide();
        var ProjectId = $("#drpProject").val();
        var UserType = "@Session["UserType"].ToString()";
        var Prjsession = sessionStorage.getItem("Proj");
        if (Prjsession != null) {
            PMMonitorData(ProjectId);
        }
        else if (ProjectId != 0 && UserType == 'Project Manager') {
            PMMonitorData(ProjectId);
        }
         $("._Date").keypress(function (e) {
            e.preventDefault();
        });
    });

    $(".btnPMTaskMonitorclose").on("click", function () {
        $('#UpdatePMTask').modal('hide');
        ResetPMTab();
    })

      $("#drpProject").change(function () {
         let tab = $(".nav-tabs li a.active").attr('id');
         if (tab == "Tab_PMMonitor") {
             var ProjectId = $("#drpProject").val();
             //var CustId = "";
             //var PhId = "";
             //var InsId = "";
             //SessionStorage(CustId, PhId, ProjectId, InsId);
             var UserType = "@Session["UserType"].ToString()";

             if (ProjectId != 0 && UserType == 'Project Manager') {
                 PMMonitorData(ProjectId)
             }
         }
    });

    $('.Planned_PM_St_date').click(function () {
         $("#Planned_PM_StartDate, .Planned_PM_St_date" ).datepicker("refresh");
            $("#Planned_PM_StartDate").focus();
     });
    $("#Planned_PM_StartDate").datepicker({
        dateFormat: 'dd M yy',
        changeYear: true,
        changeMonth: true,
        yearRange: '-0:+1',
        onSelect: function (selected) {
            //var dt = new Date(selected);
            //dt.setDate(dt.getDate() + 12);
            $("#Planned_PM_EndDate").datepicker("option", "minDate", selected);

            var date = new Date(selected);
            date.setDate(date.getDate() + 15);
            $("#Planned_PM_EndDate").datepicker("option", "maxDate", date);

            $("#Actual_PM_StartDate").val(selected);
            $("#Actual_PM_StartDate").datepicker("option", "minDate", selected);
            $("#Actual_PM_EndDate").datepicker("option", "minDate", selected);

            var StartDate = $("#Planned_PM_StartDate").val();
            var EndDate = $("#Planned_PM_EndDate").val();
            var Hrs = $('#txtEst').val().split(':');
            DateHours(StartDate, EndDate,Hrs);
        }
    });

    $('.Planned_PM_En_date').click(function () {
        $("#Planned_PM_EndDate").focus();
    });

    $('#Planned_PM_EndDate').datepicker({
        dateFormat: 'dd M yy',
        changeYear: true,
        changeMonth: true,
        yearRange: '-0:+1',
        beforeShow:customEndDate,
        onSelect: function (selected) {
            var dt = new Date(selected);
            dt.setDate(dt.getDate() +1);
            //$("#Planned_PM_StartDate").datepicker("option", "maxDate", dt);

            var StartDate = $("#Planned_PM_StartDate").val();
            var EndDate = $("#Planned_PM_EndDate").val();
            var Hrs = $('#txtEst').val().split(':');
            DateHours(StartDate, EndDate,Hrs);
            // c is weekdays, e is weekends
        }
    });


    $('.Actual_PM_St_date').click(function () {
        $("#Actual_PM_StartDate").focus();
    });

    $("#Actual_PM_StartDate").datepicker({
        dateFormat: 'dd M yy',
        changeYear: true,
        changeMonth: true,
        yearRange: '-0:+1',

        beforeShow:customEndDate,
        onSelect: function (selected) {

            $("#Actual_PM_EndDate").datepicker("option", "minDate", selected);
            var date = new Date(selected);
            date.setDate(date.getDate() + 15);
            $("#Actual_PM_EndDate").datepicker("option", "maxDate", date);

            //var minDate = $("#minDate").val();
             var StartDate = $("#Actual_PM_StartDate").val();
            var EndDate = $("#Actual_PM_EndDate").val();
            var Hrs = $('#txtAct').val().split(':');
            DateActualHours(StartDate, EndDate,Hrs);
        }
    });

    function customEndDate()
    {
        var x = $("#Planned_PM_StartDate").datepicker("getDate");
        $("#Planned_PM_EndDate").datepicker("option", "minDate", x);
        $("#Actual_PM_StartDate").datepicker("option", "minDate", x);
        $("#Actual_PM_EndDate").datepicker("option", "minDate", x);
    }

    function customActualDate() {
        var x = $("#Actual_PM_StartDate").datepicker("getDate");
        $("#Actual_PM_EndDate").datepicker("option", "minDate", x);
    }

    $('.Actual_PM_En_date').click(function () {
        $("#Actual_PM_EndDate").focus();
    });
    $('#Actual_PM_EndDate').datepicker({
        dateFormat: 'dd M yy',
        changeYear: true,
        changeMonth: true,
        yearRange: '-0:+1',
        beforeShow:customActualDate,
        onSelect: function (selected) {
            var dt = new Date(selected);
            dt.setDate(dt.getDate() - 1);
            //$("#Actual_PM_StartDate").datepicker("option", "maxDate", dt);

             var StartDate = $("#Actual_PM_StartDate").val();
            var EndDate = $("#Actual_PM_EndDate").val();
            var Hrs = $('#txtAct').val().split(':');
            DateActualHours(StartDate, EndDate,Hrs);
        }
    });

     $('#txtEst,#txtAct').on('keypress', function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 58)) {
            event.preventDefault();
        }
    });


    $('#txtEst,#txtAct').keyup(function (event) {
        this.value = this.value
            .replace(/[^\d:]/g, '')             // numbers and decimals only
            .replace(/(^[\d]{2})[\d]/g, '$1')   // not more than 2 digits at the beginning
            .replace(/(\::*)\:/g, '$1')         // decimal can't exist more than once
            //.replace(/(\:[\d]{2})./g, '$1');    // not more than 4 digits after decimal
            .replace(/(\:[0-5][0-9]{1})./g, '$1');
    });

    function DateHours(StartDate, EndDate, Hrs) {

        // c is weekdays, e is weekends
        for (var c = 0, e = 0, d = new Date(StartDate), a = (new Date(EndDate) - d) / 864E5; 0 <= a; a--) {
            var b = new Date(d);
            b.setDate(b.getDate() + a);
            1 == Math.ceil(b.getDay() % 6 / 6) ? c++ : e++
        }
        //alert(c);
        var a = (c - 1) * 8;
        var b = c * 8;
        //debugger
        // a = a * 60;
        //Hrs[0] = Hrs[0] * 60

        if (Hrs[0] >= a && b >= 99) {

        }
        else {
            $('#txtEst').val(b + ':00');
        }
    }

    function DateActualHours(StartDate, EndDate, Hrs) {
        // c is weekdays, e is weekends
        for (var c = 0, e = 0, d = new Date(StartDate), a = (new Date(EndDate) - d) / 864E5; 0 <= a; a--) {
            var b = new Date(d);
            b.setDate(b.getDate() + a);
            1 == Math.ceil(b.getDay() % 6 / 6) ? c++ : e++
        }
        //alert(c);
        var a = (c - 1) * 8;
        var b = c * 8;
        //debugger
        //if (Hrs[0] >= a && Hrs[0] <= b) {
        if (Hrs[0] >= a && b>=99) {

        }
        else {
            $('#txtAct').val(b + ':00');
        }
    }

    function HourscheckByDays(StartDate, EndDate, Hrs) {

        var status = true;
        for (var c = 0, e = 0, d = new Date(StartDate), a = (new Date(EndDate) - d) / 864E5; 0 <= a; a--) {
            var b = new Date(d);
            b.setDate(b.getDate() + a);
            1 == Math.ceil(b.getDay() % 6 / 6) ? c++ : e++
        }
        //alert(c);
        var a = (c - 1) * 8;
        var b = c * 8;
        //debugger

        // Working with Minutes
        a = a * 60;
        b = b * 60;
        Hrs[0] = Hrs[0] * 60
        Hrs[0] = parseInt(Hrs[0]) + parseInt(Hrs[1]);

        if (Hrs[0] > a && Hrs[0] <= b) {
        }
        else {
            status = false;
        }
        return status;
    }


    function PMMonitorData(ProjectId) {

        var loginid = '@Session["loginid"]';
        var User = '@Session["UserType"]';

          $.ajax({
            url: '@Url.Action("PMTaskGetData","PM")',
            async: false,
            data: {ProjectId:ProjectId,first:true},
            success: function (response) {
                $('.PMTaskMonitor tbody').remove();

                var tbody = '<tbody>';
                var tr = '<tr>';
                if (response.length > 0) {
                    $.each(response, function (key, val) {
                        var tr2 = '<tr class="tr_Effect" id="'+val.Id+'">';
                        var a = '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="'+ val.PMTaskName+'">' + val.PMTaskName + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="'+ val.PMTaskCategory+'">' + val.PMTaskCategory + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="'+ val.EST_hours1+'">' + val.EST_hours1 + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="'+ val.Actual_St_hours+'">' + val.Actual_St_hours + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PlanedDate + '">' + val.PlanedDate + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PlanedEn_Date + '">' + val.PlanedEn_Date + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.ActualDate + '">' + val.ActualDate + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.ActualEn_Date + '">' + val.ActualEn_Date + '</td>';
                        a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.StatusName + '">' + val.StatusName + '</span ></td>';
                        if (val.StatusName != 'Completed' && val.StatusName != 'Not Applicable') {
                            a += '<td><i class="fa fa-pencil edit_' + val.Id + '" id="EditPMtask" style="cursor:pointer"></td>';
                        }
                        else{
                            a += '<td></td>';
                        }

                        tr = tr +tr2 + a + '</tr>'+ '</tr>';
                    });
                }
                else {

                     Notiflix.Confirm.Show(
                         'Confirm',
                         'Are you sure to Pull the data from PM Task?',
                         'Yes', 'No',
                         function () {

                             $.ajax({
                                 type: "POST",
                                 url: '@Url.Action("PMTaskGetData","PM")',
                                 data: {ProjectId:ProjectId,first:false},
                                 dataType: "json",
                                 success: function (response) {
                                    $('.PMTaskMonitor tbody').remove();

                                    var tbody = '<tbody>';
                                    var tr = '<tr>';
                                     if (response.length > 0) {
                                         $.each(response, function (key, val) {
                                             var tr2 = '<tr class="tr_Effect" id="' + val.Id + '">';
                                             //var a = '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PMTaskName + '">' + val.PMTaskName + '</td>';
                                             var a = '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PMTaskName + '">' + val.PMTaskName + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="'+ val.PMTaskCategory+'">' + val.PMTaskCategory + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.EST_hours1 + '">' + val.EST_hours1 + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.Actual_St_hours + '">' + val.Actual_St_hours + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PlanedDate + '">' + val.PlanedDate + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.PlanedEn_Date + '">' + val.PlanedEn_Date + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.ActualDate + '">' + val.ActualDate + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.ActualEn_Date + '">' + val.ActualEn_Date + '</td>';
                                             a += '<td class="TextRap"><span class="text-capitalize" data-toggle="tooltip" title="' + val.StatusName + '">' + val.StatusName + '</span ></td>';
                                             a += '<td><i class="fa fa-pencil edit_' + val.Id + '" id="EditPMtask" style="cursor:pointer"></td>';
                                             tr = tr + tr2 + a + '</tr>' + '</tr>';
                                         });
                                     }
                                     tbody = tbody + tr + '</tbody>';
                                     $('.PMTaskMonitor').append(tbody);
                                 }
                             });
                         }, function () {
                             $("#drpProject").val(0);
                         }
                     );
                 }
                //else {
                //    var bb2 = '<td colspan="7" class="text-center">' + "<strong>No Record Found</strong>" + '</td>';
                //    tr = tr + bb2 + '</tr>';
                //}

                tbody = tbody + tr + '</tbody>';
                $('.PMTaskMonitor').append(tbody);
            }
        });
    }

     $(document).on('click', '#EditPMtask', function () {

        var tr = $(this).closest('tr');
         tr_Id = tr[0].id;

          $.ajax({
            url: '@Url.Action("GetPMById","PM")',
            type: "GET",
              data: { id: tr_Id },
              async:false,
              success: function (result) {
                  //debugger
                $('#UpdatePMTask').modal('show');

                $("#txtPMTaskMonitorID").val(result.Id);
                $("#txtPMTaskName").val(result.PMTaskName);
                $("#txtPMTaskName").prop("disabled", true);
                $("#txtEst").val(result.EST_hours1);
                $("#txtAct").val(result.Actual_St_hours);
                $("#minDate").val(result.minDate);
                $("#Planned_PM_StartDate").val(result.PlanedDate);
                $("#Planned_PM_EndDate").val(result.PlanedEn_Date);
                $("#Actual_PM_StartDate").val(result.ActualDate);
                $("#Actual_PM_EndDate").val(result.ActualEn_Date);
                $("#txtPMTaskComments").val(result.Notes);
                StatusMaster(result.StatusId);
            },
            error: function (err) {
                alert(err.responseText);
            }
        });

    });

    function StatusMaster(st) {

        $.ajax({
            url: '@Url.Action("GetStatusMaster","IssueTrack")',
            async: false,
            type: 'GET',
            success: function (Data) {
                var Design_ = '<option value="_value">_Name</option>';
                var Design1_ = '<option value="_value" selected>_Name</option>';
                var End_Result = '';

                for (var i = 0; i < Data.length; i++) {
                    var local = '';

                    if (Data[i].StatusId == st) {
                        local = Design1_.replace('_value', Data[i].StatusId);
                    }
                    else {
                        local = Design_.replace('_value', Data[i].StatusId);
                    }
                    local = local.replace("_Name", Data[i].Status);
                    End_Result = End_Result + local;
                }
                $('#drpStatusEdit').replaceWith(End_Result);
            }
        });
    }
    function TaskEstHrs(Estimated) {
        var Status = true;
        var filter = /^([0-9]{1,2}).[0-5][0-9]$/
        var filter1 = /^(00.[0-5][1-9]|0.[0-5][1-9]|00.[1-5][0-9]|0.[1-5][0-9]|0[1-9]+[.][0-5][0-9]|[1-9]+[.][0-5][0-9]|[1-9][0-9]+[.][0-5][0-9])$/
        if (!filter.test(Estimated)) {
            Status = false;
        }
        else if (!filter1.test(Estimated)) {
           Status = false;
        }
        return Status;
    }

    function ActualHrsCheck(Actual) {

        var Status = true;
        var filter = /^([0-9]{1,2}).[0-5][0-9]$/
        var filter1 = /^(00.[0-5][1-9]|0.[0-5][1-9]|00.[1-5][0-9]|0.[1-5][0-9]|0[1-9]+[.][0-5][0-9]|[1-9][0-9]+[.][0-5][0-9])$/
        if (!filter.test(Actual)) {
            Status = false;
        }
        else if (!filter1.test(Actual)) {
           Status = false;
        }
        return Status;
    }

    $("#btnPMTaskMonitorSave").on("click", function () {

        var id = $("#txtPMTaskMonitorID").val();
        var Estimated = $("#txtEst").val();
         Estimated = Estimated.replace(/:/g, ".");
        var ActHours = $("#txtAct").val();
         ActHours = ActHours.replace(/:/g, ".");
        var PlannedStDate = $("#Planned_PM_StartDate").val();
        var PlannedEnDate = $("#Planned_PM_EndDate").val();
        var ActStDt = $("#Actual_PM_StartDate").val();
        var ActEnDt = $("#Actual_PM_EndDate").val();
        var PMTaskComments = $("#txtPMTaskComments").val().trim();
        var status = $("#drpStatus").val();

        var EST_hours_ = ActHours_ = PlannedStDate_ = PlannedEnDate_ = ActStDt_ = ActEnDt_ = PMTaskComments_ = status_ = false;

        if (status == 0) {
            status_ = true;
            $("#lblStatus").html("Please Select the Status").show();
        } else {
            $("#lblStatus").html("").show();
        }

        if (Estimated == "") {
            EST_hours_ = true;
            $("#lblEstimated").html("Please enter Est hours").show();
        }
        else if (TaskEstHrs(Estimated) == false) {
            EST_hours_ = true;
            $("#lblEstimated").html("Invalid Est hrs").show();
        }
        else if (HourscheckByDays(PlannedStDate, PlannedEnDate, Estimated.split('.')) == false) {
            EST_hours_ = true;
            $("#lblEstimated").html("Invalid Est hrs").show();
            Notiflix.Notify.Info('Est Hours not matching with selected Planned date', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
        }
        else {
            $("#lblEstimated").html("").show();
        }

        if (ActHours == "") {
            ActHours_ = true;
            $("#lblActual").html("Please enter Actual hours").show();
        }
        else if (TaskEstHrs(ActHours) == false) {
            ActHours_ = true;
            $("#lblActual").html("Invalid Actual hrs").show();
        }
        else if (HourscheckByDays(ActStDt, ActEnDt, ActHours.split('.')) == false) {
            ActHours_ = true;
            $("#lblActual").html("Invalid Actual hrs").show();
            Notiflix.Notify.Info('Actual Hours not matching with selected Actual date', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
        }
        else {
            $("#lblActual").html("").show();
        }

        if (PlannedStDate == "") {
            PlannedStDate_ = true;
            $("#lblPlannedStDate").html("Please Enter the Planned Start Date").show();
        }
        else {
            $("#lblPlannedStDate").html("").show();
        }

        if (PlannedEnDate == "") {
            PlannedEnDate_ = true;
            $("#lblPlannedEnDate").html("Please Enter the Planned End Date").show();
        }
        else {
            $("#lblPlannedEnDate").html("").show();
        }

        if (ActStDt == "") {
            ActStDt_ = true;
            $("#lblActStDt").html("Please Enter the Actual Start Date").show();
        }
        else {
            $("#lblActStDt").html("").show();
        }

        if (ActEnDt == "") {
            ActEnDt_ = true;
            $("#lblActEnDt").html("Please Enter the Actual End Date").show();
        }
        else {
            $("#lblActEnDt").html("").show();
        }
        if (PMTaskComments == "") {
            PMTaskComments_ = true;
            $("#lblPMTaskComments").html("Please Enter the Comments").show();
        } else {
            $("#lblPMTaskComments").html("").show();
        }

        if (EST_hours_ == false && ActHours_ == false && PlannedStDate_ == false && PlannedEnDate_ == false && ActStDt_ == false && ActEnDt_ == false && PMTaskComments_ == false && status_ == false) {

             $.ajax({
               // type: "POST",
                url: '@Url.Action("SubmitPMTaskMonitor","PM")',
                async: false,
                //data: { pmTaskModel:model},
                data: { Id:id, StatusId:status,EST_hours:Estimated,Actual_St_hrs:ActHours,PlanedDate:PlannedStDate,PlanedEn_Date:PlannedEnDate,ActualDate:ActStDt,ActualEn_Date: ActEnDt,Notes:PMTaskComments},
                success: function (response) {
                    if (response == true) {
                        $('.modal-backdrop').remove();
                        $("#UpdatePMTask").modal('hide');
                        ResetPMTab();
                        RefreshPMMonitor();
                        Notiflix.Notify.Success('Saved successfully..!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                    }
                    else {
                        Notiflix.Notify.Failure('Not Saved!', { cssAnimationStyle: 'zoom', cssAnimationDuration: 500, });
                    }
                },
                failure: function (response) {
                    //alert(response.responseText);
                    alert("failure");
                },
                error: function (response) {
                    //alert(response.responseText);
                    alert('error');
                }
            });
        }
    });

    function ResetPMTab() {

        $("#txtPMTaskMonitorID").val("");
        $("#txtEst").val("");
        $("#txtAct").val("");
        $("#Planned_PM_StartDate").val("");
        $("#Planned_PM_EndDate").val("");
        $("#Actual_PM_StartDate").val("");
        $("#Actual_PM_EndDate").val("");
        $("#txtPMTaskComments").val("");
        $("#drpStatus").val(5);

        $("#lblStatus").html("").show();
        $("#lblEstimated").html("").show();
        $("#lblActual").html("").show();
        $("#lblPlannedStDate").html("").show();
         $("#lblPlannedEnDate").html("").show();
        $("#lblActStDt").html("").show();
         $("#lblActEnDt").html("").show();
        $("#lblPMTaskComments").html("").show();
    }
</script>
