
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>NotFound</title>
    @Styles.Render("~/Content/css/ErrorStyle")
<script src="~/assets/js/gsap.min.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.3.1/gsap.min.js"></script>*@


</head>
<body>
    <div class="pr_container">
        <div class="progress-bar__container">
            <div class="progress-bar">
            </div>
        </div>
    </div>
    <div class="container">
        <h1 class="first-four">4</h1>
        <div class="cog-wheel1">
            <div class="cog1">
                <div class="top"></div>
                <div class="down"></div>
                <div class="left-top"></div>
                <div class="left-down"></div>
                <div class="right-top"></div>
                <div class="right-down"></div>
                <div class="left"></div>
                <div class="right"></div>
            </div>
        </div>

        <div class="cog-wheel2">
            <div class="cog2">
                <div class="top"></div>
                <div class="down"></div>
                <div class="left-top"></div>
                <div class="left-down"></div>
                <div class="right-top"></div>
                <div class="right-down"></div>
                <div class="left"></div>
                <div class="right"></div>
            </div>
        </div>
        <h1 class="second-four">4</h1>
        <p class="wrong-para">Uh Oh! Page not found!</p>
    </div>
    @Scripts.Render("~/bundles/Scripts/Error")
    <script>
        /*Prograssbar*/
        const progressBarContainer = document.querySelector('.progress-bar__container');
        const progressBar = document.querySelector('.progress-bar');
        const progressBarText = document.querySelector('.progress-bar__text');

        const progressBarStates = [0, 50, 75, 100];

        let time = 0;
        let endState = 100;

        progressBarStates.forEach(state => {
            let randomTime = Math.floor(Math.random() * 3000);
            setTimeout(() => {
                if (state == endState) {
                    gsap.to(progressBar, {
                        x: `${state}%`,
                        duration: 2,
                        backgroundColor: '#4895ef',
                        onComplete: () => {
                            progressBarText.style.display = "initial";
                            progressBarContainer.style.boxShadow = '0 0 5px #4895ef';
                        }
                    });
                    var Url = '@Url.Action("Logout", "Login")';
                    window.location.href = Url;
                } else {
                    gsap.to(progressBar, {
                        x: `${state}%`,
                        duration: 2,
                    });
                }
            }, randomTime + time);
            time += randomTime;
        });
    </script>
</body>



</html>
